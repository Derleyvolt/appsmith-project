{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "LoadPage",
    "fullyQualifiedName": "CriarProjetoJS.LoadPage",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Projetos",
    "collectionId": "Projetos_CriarProjetoJS",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async () => {\n  let data_favorecido = await LoadFavorecidosAPI.run().catch(() => {\n    showAlert(\"Erro na requisição dos dados de favorecidos\");\n  });\n  let data_movimentacao = await ObterMovimentacoesAPI.run().catch(() => {\n    showAlert(\"Erro na requisição dos dados de movimentacão\");\n  });\n  let data_rubrica = await ObterRubricasAPI.run().catch(() => {\n    showAlert(\"Erro na requisição dos dados de rubricas\");\n  });\n  let data_tag = await ObterTAGsAPI.run().catch(() => {\n    showAlert(\"Erro na requisição dos dados das TAGs\");\n  });\n  let lista_favorecidos = [];\n  let lista_movimentacao = [];\n  let lista_rubrica = [];\n  let lista_tag = [];\n  for (let e of data_favorecido) {\n    lista_favorecidos.push({\n      'label': e['nome'],\n      'value': e['id']\n    });\n  }\n  for (let e of data_movimentacao) {\n    lista_movimentacao.push({\n      'label': e['descricao'],\n      'value': e['id']\n    });\n  }\n  for (let e of data_rubrica) {\n    lista_rubrica.push({\n      'label': e['descricao'],\n      'value': e['id']\n    });\n  }\n  for (let e of data_tag) {\n    lista_tag.push({\n      'label': e['descricao'],\n      'value': e['id']\n    });\n  }\n  await storeValue(\"favorecidos\", lista_favorecidos);\n  await storeValue(\"movimentacoes\", lista_movimentacao);\n  await storeValue(\"rubricas\", lista_rubrica);\n  await storeValue(\"tags\", lista_tag);\n  await showAlert(\"Tudo carregado\");\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": true,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async () => {\n  let data_favorecido = await LoadFavorecidosAPI.run().catch(() => {\n    showAlert(\"Erro na requisição dos dados de favorecidos\");\n  });\n  let data_movimentacao = await ObterMovimentacoesAPI.run().catch(() => {\n    showAlert(\"Erro na requisição dos dados de movimentacão\");\n  });\n  let data_rubrica = await ObterRubricasAPI.run().catch(() => {\n    showAlert(\"Erro na requisição dos dados de rubricas\");\n  });\n  let data_tag = await ObterTAGsAPI.run().catch(() => {\n    showAlert(\"Erro na requisição dos dados das TAGs\");\n  });\n  let lista_favorecidos = [];\n  let lista_movimentacao = [];\n  let lista_rubrica = [];\n  let lista_tag = [];\n  for (let e of data_favorecido) {\n    lista_favorecidos.push({\n      'label': e['nome'],\n      'value': e['id']\n    });\n  }\n  for (let e of data_movimentacao) {\n    lista_movimentacao.push({\n      'label': e['descricao'],\n      'value': e['id']\n    });\n  }\n  for (let e of data_rubrica) {\n    lista_rubrica.push({\n      'label': e['descricao'],\n      'value': e['id']\n    });\n  }\n  for (let e of data_tag) {\n    lista_tag.push({\n      'label': e['descricao'],\n      'value': e['id']\n    });\n  }\n  await storeValue(\"favorecidos\", lista_favorecidos);\n  await storeValue(\"movimentacoes\", lista_movimentacao);\n  await storeValue(\"rubricas\", lista_rubrica);\n  await storeValue(\"tags\", lista_tag);\n  await showAlert(\"Tudo carregado\");\n}"
    ],
    "userSetOnLoad": true,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Projetos_CriarProjetoJS.LoadPage",
  "deleted": false,
  "gitSyncId": "637d55b1cbb10813d213d9ed_63c6db241d2df530099f6bcc"
}