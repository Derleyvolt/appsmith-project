{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "Login",
    "fullyQualifiedName": "DoLogin.Login",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Login",
    "collectionId": "Login_DoLogin",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async (username, password) => {\n  return await storeValue(\"userdata\", {\n    \"username\": username,\n    \"password\": password\n  }).then(() => {\n    return getLoginToken.run().then(res => res);\n  }).then(res => {\n    if (res.hasOwnProperty('access')) {\n      return res;\n    }\n    return {};\n  });\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [
        {},
        {}
      ],
      "isAsync": true
    },
    "executeOnLoad": false,
    "clientSideExecution": true,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async (username, password) => {\n  return await storeValue(\"userdata\", {\n    \"username\": username,\n    \"password\": password\n  }).then(() => {\n    return getLoginToken.run().then(res => res);\n  }).then(res => {\n    if (res.hasOwnProperty('access')) {\n      return res;\n    }\n    return {};\n  });\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Login_DoLogin.Login",
  "deleted": false,
  "gitSyncId": "637d55b1cbb10813d213d9ed_639b66197b3ff97723bea967"
}